/*
 * This file is generated by jOOQ.
 */
package org.eclipse.openvsx.jooq.tables;


import java.util.Arrays;
import java.util.List;

import org.eclipse.openvsx.jooq.Keys;
import org.eclipse.openvsx.jooq.Public;
import org.eclipse.openvsx.jooq.tables.records.AdminStatisticsTopNamespaceExtensionsRecord;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AdminStatisticsTopNamespaceExtensions extends TableImpl<AdminStatisticsTopNamespaceExtensionsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.admin_statistics_top_namespace_extensions</code>
     */
    public static final AdminStatisticsTopNamespaceExtensions ADMIN_STATISTICS_TOP_NAMESPACE_EXTENSIONS = new AdminStatisticsTopNamespaceExtensions();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AdminStatisticsTopNamespaceExtensionsRecord> getRecordType() {
        return AdminStatisticsTopNamespaceExtensionsRecord.class;
    }

    /**
     * The column <code>public.admin_statistics_top_namespace_extensions.admin_statistics_id</code>.
     */
    public final TableField<AdminStatisticsTopNamespaceExtensionsRecord, Long> ADMIN_STATISTICS_ID = createField(DSL.name("admin_statistics_id"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.admin_statistics_top_namespace_extensions.namespace</code>.
     */
    public final TableField<AdminStatisticsTopNamespaceExtensionsRecord, String> NAMESPACE = createField(DSL.name("namespace"), SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>public.admin_statistics_top_namespace_extensions.extension_count</code>.
     */
    public final TableField<AdminStatisticsTopNamespaceExtensionsRecord, Integer> EXTENSION_COUNT = createField(DSL.name("extension_count"), SQLDataType.INTEGER.nullable(false), this, "");

    private AdminStatisticsTopNamespaceExtensions(Name alias, Table<AdminStatisticsTopNamespaceExtensionsRecord> aliased) {
        this(alias, aliased, null);
    }

    private AdminStatisticsTopNamespaceExtensions(Name alias, Table<AdminStatisticsTopNamespaceExtensionsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.admin_statistics_top_namespace_extensions</code> table reference
     */
    public AdminStatisticsTopNamespaceExtensions(String alias) {
        this(DSL.name(alias), ADMIN_STATISTICS_TOP_NAMESPACE_EXTENSIONS);
    }

    /**
     * Create an aliased <code>public.admin_statistics_top_namespace_extensions</code> table reference
     */
    public AdminStatisticsTopNamespaceExtensions(Name alias) {
        this(alias, ADMIN_STATISTICS_TOP_NAMESPACE_EXTENSIONS);
    }

    /**
     * Create a <code>public.admin_statistics_top_namespace_extensions</code> table reference
     */
    public AdminStatisticsTopNamespaceExtensions() {
        this(DSL.name("admin_statistics_top_namespace_extensions"), null);
    }

    public <O extends Record> AdminStatisticsTopNamespaceExtensions(Table<O> child, ForeignKey<O, AdminStatisticsTopNamespaceExtensionsRecord> key) {
        super(child, key, ADMIN_STATISTICS_TOP_NAMESPACE_EXTENSIONS);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public List<ForeignKey<AdminStatisticsTopNamespaceExtensionsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<AdminStatisticsTopNamespaceExtensionsRecord, ?>>asList(Keys.ADMIN_STATISTICS_TOP_NAMESPACE_EXTENSIONS__ADMIN_STATISTICS_TOP_NAMESPACE_EXTENSIONS_FKEY);
    }

    private transient AdminStatistics _adminStatistics;

    public AdminStatistics adminStatistics() {
        if (_adminStatistics == null)
            _adminStatistics = new AdminStatistics(this, Keys.ADMIN_STATISTICS_TOP_NAMESPACE_EXTENSIONS__ADMIN_STATISTICS_TOP_NAMESPACE_EXTENSIONS_FKEY);

        return _adminStatistics;
    }

    @Override
    public AdminStatisticsTopNamespaceExtensions as(String alias) {
        return new AdminStatisticsTopNamespaceExtensions(DSL.name(alias), this);
    }

    @Override
    public AdminStatisticsTopNamespaceExtensions as(Name alias) {
        return new AdminStatisticsTopNamespaceExtensions(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AdminStatisticsTopNamespaceExtensions rename(String name) {
        return new AdminStatisticsTopNamespaceExtensions(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public AdminStatisticsTopNamespaceExtensions rename(Name name) {
        return new AdminStatisticsTopNamespaceExtensions(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<Long, String, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
